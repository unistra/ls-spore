// Generated by LiveScript 1.5.0
(function(){
  var SporeMiddleware, SporeMiddlewareAuthApiKey, out$ = typeof exports != 'undefined' && exports || this;
  SporeMiddleware = (function(){
    SporeMiddleware.displayName = 'SporeMiddleware';
    var prototype = SporeMiddleware.prototype, constructor = SporeMiddleware;
    function SporeMiddleware(){
      this.process_request = void 8;
      this.process_response = void 8;
    }
    SporeMiddleware.prototype.call = function(env){
      if (this.process_request != null) {
        return this.process_request(env);
      } else if (this.process_response != null) {
        return this.process_response(env);
      }
    };
    return SporeMiddleware;
  }());
  SporeMiddlewareAuthApiKey = (function(superclass){
    var prototype = extend$((import$(SporeMiddlewareAuthApiKey, superclass).displayName = 'SporeMiddlewareAuthApiKey', SporeMiddlewareAuthApiKey), superclass).prototype, constructor = SporeMiddlewareAuthApiKey;
    function SporeMiddlewareAuthApiKey(params){
      this.keyName = params.key_name;
      this.keyValue = params.key_value;
    }
    SporeMiddlewareAuthApiKey.prototype.process_request = function(env){
      return env.spore.headers[this.keyName] = this.keyValue;
    };
    return SporeMiddlewareAuthApiKey;
  }(SporeMiddleware));
  out$.SporeMiddlewareAuthApiKey = SporeMiddlewareAuthApiKey;
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
